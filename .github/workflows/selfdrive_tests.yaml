name: selfdrive

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
  workflow_call:
    inputs:
      run_number:
        default: '1'
        required: true
        type: string

concurrency:
  group: selfdrive-tests-ci-run-${{ inputs.run_number }}-${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  PYTHONWARNINGS: "ignore::DeprecationWarning"
  AZURE_TOKEN: ${{ secrets.AZURE_COMMADATACI_OPENPILOTCI_TOKEN }}

  PYTEST: pytest --continue-on-collection-errors --cov --cov-report=xml --cov-append --durations=0 --durations-min=5 --hypothesis-seed 0 -n logical

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - uses: ./.github/workflows/compile-openpilot
      timeout-minutes: 30

  static_analysis:
    name: static analysis
    runs-on: ubuntu-24.04
    env:
      PYTHONWARNINGS: default
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Static analysis
      timeout-minutes: 1
      run: |
        source .venv/bin/activate
        scripts/lint/lint.sh

  unit_tests:
    name: unit tests
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Build openpilot
      run: |
        source .venv/bin/activate
        scons -j$(nproc)
    - name: Run unit tests
      timeout-minutes: 20
      run: |
        source .venv/bin/activate
        $PYTEST --collect-only -m 'not slow' &> /dev/null && \
        MAX_EXAMPLES=1 $PYTEST -m 'not slow' && \
        ./selfdrive/ui/tests/create_test_translations.sh && \
        QT_QPA_PLATFORM=offscreen ./selfdrive/ui/tests/test_translations
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v4
      with:
        name: ${{ github.job }}
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  process_replay:
    name: process replay
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Cache test routes
      id: dependency-cache
      uses: actions/cache@v4
      with:
        path: .ci_cache/comma_download_cache
        key: proc-replay-${{ hashFiles('selfdrive/test/process_replay/ref_commit', 'selfdrive/test/process_replay/test_processes.py') }}
    - name: Build openpilot
      run: |
        source .venv/bin/activate
        scons -j$(nproc)
    - name: Run replay
      timeout-minutes: 20
      run: |
        source .venv/bin/activate
        coverage run selfdrive/test/process_replay/test_processes.py -j$(nproc) && \
        chmod -R 777 .ci_cache/comma_download_cache && \
        coverage combine && \
        coverage xml
    - name: Print diff
      id: print-diff
      if: always()
      run: cat selfdrive/test/process_replay/diff.txt
    - uses: actions/upload-artifact@v4
      if: always()
      continue-on-error: true
      with:
        name: process_replay_diff.txt
        path: selfdrive/test/process_replay/diff.txt
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v4
      with:
        name: ${{ github.job }}
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  test_cars:
    name: cars
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        job: [0, 1, 2, 3]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Cache test routes
      id: routes-cache
      uses: actions/cache@v4
      with:
        path: .ci_cache/comma_download_cache
        key: car_models-${{ hashFiles('selfdrive/car/tests/test_models.py', 'opendbc/car/tests/routes.py') }}-${{ matrix.job }}
    - name: Build openpilot
      run: |
        source .venv/bin/activate
        scons -j$(nproc)
    - name: Test car models
      timeout-minutes: 20
      run: |
        source .venv/bin/activate
        MAX_EXAMPLES=1 $PYTEST selfdrive/car/tests/test_models.py && \
        chmod -R 777 .ci_cache/comma_download_cache
      env:
        NUM_JOBS: 4
        JOB_ID: ${{ matrix.job }}
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v4
      with:
        name: ${{ github.job }}-${{ matrix.job }}
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  create_ui_report:
    name: Create UI Report
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/workflows/setup-with-retry
      - name: caching frames
        id: frames-cache
        uses: actions/cache@v4
        with:
          path: .ci_cache/comma_download_cache
          key: ui_screenshots_test_${{ hashFiles('selfdrive/ui/tests/test_ui/run.py') }}
      - name: Build openpilot
        run: |
          source .venv/bin/activate
          scons -j$(nproc)
      - name: Create Test Report
        timeout-minutes: 3
        run: |
            source .venv/bin/activate
            PYTHONWARNINGS=ignore &&
            source selfdrive/test/setup_xvfb.sh &&              
            CACHE_ROOT=.ci_cache/comma_download_cache python3 selfdrive/ui/tests/test_ui/run.py &&
            chmod -R 777 .ci_cache/comma_download_cache
      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: report-${{ inputs.run_number || '1' }}-${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && 'master' || github.event.number }}
          path: selfdrive/ui/tests/test_ui/report_1/screenshots
