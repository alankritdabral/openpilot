name: selfdrive

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
  workflow_call:
    inputs:
      run_number:
        default: "1"
        required: true
        type: string

concurrency:
  group: selfdrive-tests-ci-run-${{ inputs.run_number }}-${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  PYTHONWARNINGS: "ignore::DeprecationWarning"
  AZURE_TOKEN: ${{ secrets.AZURE_COMMADATACI_OPENPILOTCI_TOKEN }}
  PYTEST: pytest --continue-on-collection-errors --cov --cov-report=xml --cov-append --durations=0 --durations-min=5 --hypothesis-seed 0 -n logical

jobs:
  build:
    runs-on:
      - ${{ ((github.repository == 'commaai/openpilot') && ((github.event_name != 'pull_request') || (github.event.pull_request.head.repo.full_name == 'commaai/openpilot'))) && 'namespace-profile-amd64-8x16' || 'ubuntu-24.04' }}
      - ${{ ((github.repository == 'commaai/openpilot') && ((github.event_name != 'pull_request') || (github.event.pull_request.head.repo.full_name == 'commaai/openpilot'))) && 'namespace-experiments:docker.builds.local-cache=separate' || 'ubuntu-24.04' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/workflows/setup
      - uses: ./.github/workflows/compile-openpilot
        timeout-minutes: 30

  static_analysis:
    name: static analysis
    runs-on:
      - ${{ ((github.repository == 'commaai/openpilot') && ((github.event_name != 'pull_request') || (github.event.pull_request.head.repo.full_name == 'commaai/openpilot'))) && 'namespace-profile-amd64-8x16' || 'ubuntu-24.04' }}
      - ${{ ((github.repository == 'commaai/openpilot') && ((github.event_name != 'pull_request') || (github.event.pull_request.head.repo.full_name == 'commaai/openpilot'))) && 'namespace-experiments:docker.builds.local-cache=separate' || 'ubuntu-24.04' }}
    env:
      PYTHONWARNINGS: default
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/workflows/setup
      - name: Static analysis
        timeout-minutes: 1
        run: |
          source .venv/bin/activate
          scripts/lint/lint.sh

  process_replay:
    name: process replay
    runs-on:
      - ${{ ((github.repository == 'commaai/openpilot') && ((github.event_name != 'pull_request') || (github.event.pull_request.head.repo.full_name == 'commaai/openpilot'))) && 'namespace-profile-amd64-8x16' || 'ubuntu-24.04' }}
      - ${{ ((github.repository == 'commaai/openpilot') && ((github.event_name != 'pull_request') || (github.event.pull_request.head.repo.full_name == 'commaai/openpilot'))) && 'namespace-experiments:docker.builds.local-cache=separate' || 'ubuntu-24.04' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: ./.github/workflows/setup
      - name: Cache test routes
        id: dependency-cache
        uses: actions/cache@v4
        with:
          path: .ci_cache/comma_download_cache
          key: proc-replay-${{ hashFiles('selfdrive/test/process_replay/ref_commit', 'selfdrive/test/process_replay/test_processes.py') }}
      - name: Build openpilot
        run: |
          source .venv/bin/activate
          scons -j$(nproc)
      - name: Run replay
        timeout-minutes: ${{ contains(runner.name, 'nsc') && (steps.dependency-cache.outputs.cache-hit == 'true') && 1 || 20 }}
        run: |
          source .venv/bin/activate
          coverage run selfdrive/test/process_replay/test_processes.py -j$(nproc) && \
          chmod -R 777 .ci_cache/comma_download_cache && \
          coverage combine && \
          coverage xml
      - name: Print diff
        id: print-diff
        if: always()
        run: cat selfdrive/test/process_replay/diff.txt
      - uses: actions/upload-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: process_replay_diff.txt
          path: selfdrive/test/process_replay/diff.txt
      - name: Upload reference logs
        if: ${{ failure() && steps.print-diff.outcome == 'success' && github.repository == 'commaai/openpilot' && env.AZURE_TOKEN != '' }}
        run: |
          source .venv/bin/activate
          unset PYTHONWARNINGS && AZURE_TOKEN='$AZURE_TOKEN' python3 selfdrive/test/process_replay/test_processes.py -j$(nproc) --upload-only
      - name: Run regen
        if: false
        timeout-minutes: 4
        run: |
          source .venv/bin/activate
          ONNXCPU=1 $PYTEST selfdrive/test/process_replay/test_regen.py && \
          chmod -R 777 .ci_cache/comma_download_cache
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v4
        with:
          name: ${{ github.job }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
