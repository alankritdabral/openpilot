name: "openpilot env setup"

env:
  UV_SYSTEM_PYTHON: 1

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        git lfs pull

    # Build cache key
    - id: cache-key
      shell: bash
      run: |
        echo "CACHE_COMMIT_DATE=$(git log -1 --pretty='format:%cd' --date=format:'%Y-%m-%d-%H:%M')" >> $GITHUB_ENV
        echo "apt-cache-${{ runner.os }}-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}" > cache-key.txt


    - name: Cache apt packages
      uses: actions/cache@v3
      with:
        path: |
          /var/lib/dpkg/status
          /var/lib/apt/lists/*
        key: ${{ runner.os }}-apt-packages-${{ hashFiles('**/package.txt') }}
        restore-keys: |
          ${{ runner.os }}-apt-packages-
          ${{ runner.os }}-

    # Install APT dependencies if not cached
    - name: Install APT Dependencies
      if: steps.restore.outputs.cache-hit != 'true'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends \
          ca-certificates \
          clang \
          build-essential \
          gcc-arm-none-eabi \
          liblzma-dev \
          capnproto \
          libcapnp-dev \
          curl \
          libcurl4-openssl-dev \
          git \
          git-lfs \
          ffmpeg \
          libavformat-dev \
          libavcodec-dev \
          libavdevice-dev \
          libavutil-dev \
          libavfilter-dev \
          libbz2-dev \
          libeigen3-dev \
          libffi-dev \
          libglew-dev \
          libgles2-mesa-dev \
          libglfw3-dev \
          libglib2.0-0 \
          libqt5charts5-dev \
          libncurses5-dev \
          libssl-dev \
          libusb-1.0-0-dev \
          libzmq3-dev \
          libzstd-dev \
          libsqlite3-dev \
          libsystemd-dev \
          locales \
          opencl-headers \
          ocl-icd-libopencl1 \
          ocl-icd-opencl-dev \
          portaudio19-dev \
          qttools5-dev-tools \
          libqt5svg5-dev \
          libqt5serialbus5-dev \
          libqt5x11extras5-dev \
          libqt5opengl5-dev \
          g++-12 \
          qtbase5-dev \
          qtchooser \
          qt5-qmake \
          qtbase5-dev-tools \
          python3-dev \
          python3-venv
        sudo apt-get clean

    # UV environment setup
    - uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - shell: bash
      run: uv sync --frozen --all-extras
