name: "openpilot env setup"
inputs:
  is_retried:
    description: "A mock param that asserts that we use the setup-with-retry instead of this action directly"
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    # do this after checkout to ensure our custom LFS config is used to pull from GitLab
    - shell: bash
      run: |
        start=$(date +%s)
        git lfs pull
        end=$(date +%s)
        echo "Execution time: $((end - start)) seconds"
    # build cache
    - id: date
      shell: bash
      run: |
        echo "CACHE_COMMIT_DATE=$(git log -1 --pretty='format:%cd' --date=format:'%Y-%m-%d-%H:%M')" >> $GITHUB_ENV
        echo "$CACHE_COMMIT_DATE"

    - id: scons-cache
      uses: ./.github/workflows/auto-cache
      with:
        path: /tmp/scons_cache
        key: scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}-${{ github.sha }}
        restore-keys: |
          scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}
          scons-${{ runner.arch }}

    - name: Configure APT to use workspace cache
      shell: bash
      run: |
        mkdir -p ~/apt-cache/archives/partial
        echo 'Dir::Cache::archives "'"$HOME"'/apt-cache/archives";' | sudo tee /etc/apt/apt.conf.d/90-github-cache

    - name: Restore APT packages cache
      id: apt-cache
      uses: actions/cache/restore@v4
      with:
        path: ~/apt-cache/archives # Changed to user directory
        key: Linux-apt-${{ runner.os }}-${{ hashFiles('tools/install_ubuntu_dependencies.sh') }}
      
    - name: Install system packages on cache miss
      if: steps.apt-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        export DEBIAN_FRONTEND=noninteractive
        start=$(date +%s)
        sudo apt-get update
        sudo ./tools/install_ubuntu_dependencies.sh
        end=$(date +%s)
        echo "Execution time: $((end - start)) seconds"
        start=$(date +%s)
        sudo apt-get -y --no-install-recommends install \
          alien \
          gnome-screenshot \
          pulseaudio \
          python3-tk \
          x11-xserver-utils
        end=$(date +%s)
        echo "âœ… Packages installed in $((end - start)) seconds"

    - name: Install downloaded packages on cache hit
      if: steps.apt-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        start=$(date +%s)
        cd ~/apt-cache/archives
        sudo dpkg -i *.deb || sudo apt-get install -f -y
        end=$(date +%s)
        echo "Execution time: $((end - start)) seconds"

    - name: Install python packages
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    - shell: bash
      run: |
        start=$(date +%s)
        uv sync --frozen --all-extras
        end=$(date +%s)
        echo "Execution time: $((end - start)) seconds"
