name: "openpilot env setup"

env:
  UV_SYSTEM_PYTHON: 1
  DEBIAN_FRONTEND: noninteractive
  UCF_FORCE_CONFFOLD: 1

permissions:
  contents: read
  actions: write

runs:
  using: "composite"
  steps:
    # Cache APT packages
    - name: Cache APT
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: apt-${{ hashFiles('**/*.yml') }}-${{ runner.os }}

    # Parallel initialization
    - name: Parallel setup
      shell: bash
      run: |
        # Use faster Azure mirrors
        sudo sed -i 's/http:\/\/archive\.ubuntu\.com/http:\/\/azure\.archive\.ubuntu\.com/' /etc/apt/sources.list
        sudo sed -i 's/http:\/\/security\.ubuntu\.com/http:\/\/azure\.archive\.ubuntu\.com/' /etc/apt/sources.list
        
        # Manually enable universe for all components
        sudo sed -i '/azure\.archive\.ubuntu\.com/s/ main/ main universe/' /etc/apt/sources.list
        sudo sed -i '/azure\.archive\.ubuntu\.com/s/ security/ security universe/' /etc/apt/sources.list
        sudo sed -i '/azure\.archive\.ubuntu\.com/s/ updates/ updates universe/' /etc/apt/sources.list
        sudo sed -i '/azure\.archive\.ubuntu\.com/s/ backports/ backports universe/' /etc/apt/sources.list
        
        # Run LFS pull and APT update in parallel
        git lfs pull &
        sudo apt-get update &
        wait

    # Install APT dependencies if not cached
    - name: Install APT Dependencies
      if: steps.Cache-APT.outputs.cache-hit != 'true'
      shell: bash
      run: |
        sudo apt-get install -y apt-fast
        sudo apt-fast install -y --no-install-recommends \
          clang \
          build-essential \
          gcc-arm-none-eabi \
          liblzma-dev \
          capnproto \
          libcapnp-dev \
          libcurl4-openssl-dev \
          ffmpeg \
          libavformat-dev \
          libavcodec-dev \
          libavdevice-dev \
          libavutil-dev \
          libavfilter-dev \
          libbz2-dev \
          libeigen3-dev \
          libffi-dev \
          libglew-dev \
          libgles2-mesa-dev \
          libglfw3-dev \
          libglib2.0-0 \
          libqt5charts5-dev \
          libncurses5-dev \
          libssl-dev \
          libusb-1.0-0-dev \
          libzmq3-dev \
          libzstd-dev \
          libsqlite3-dev \
          libsystemd-dev \
          opencl-headers \
          ocl-icd-libopencl1 \
          ocl-icd-opencl-dev \
          portaudio19-dev \
          qttools5-dev-tools \
          libqt5svg5-dev \
          libqt5serialbus5-dev \
          libqt5x11extras5-dev \
          libqt5opengl5-dev \
          g++-12 \
          qtbase5-dev \
          qtchooser \
          qt5-qmake \
          qtbase5-dev-tools \
          python3-dev \
          python3-venv

    # UV environment setup with better caching
    - uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-key: uv-${{ hashFiles('uv.lock') }}

    # Sync UV dependencies
    - shell: bash
      run: uv sync --frozen --all-extras
