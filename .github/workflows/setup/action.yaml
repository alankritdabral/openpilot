name: "openpilot env setup"

env:
  UV_SYSTEM_PYTHON: 1
  DEBIAN_FRONTEND: noninteractive
  UCF_FORCE_CONFFOLD: 1

permissions:
  contents: read
  actions: write

runs:
  using: "composite"
  steps:
    # Configure APT to use aria2 for parallel downloads
    - name: Setup APT parallel downloads
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y aria2
        echo 'Acquire::http::User-Agent "Mozilla/5.0";' | sudo tee /etc/apt/apt.conf.d/00useragent
        echo 'Acquire::http::Pipeline-Depth "10";' | sudo tee -a /etc/apt/apt.conf.d/00useragent
        echo 'Acquire::Queue-Mode "access";' | sudo tee -a /etc/apt/apt.conf.d/00useragent
        echo 'Acquire::Retries "3";' | sudo tee -a /etc/apt/apt.conf.d/00useragent

    # Cache configuration
    - name: Cache APT packages
      uses: actions/cache@v4
      with:
        path: /var/cache/apt/archives
        key: apt-${{ hashFiles('**/setup-actions.yml') }}-${{ runner.os }}

    # System setup
    - name: Configure environment
      shell: bash
      run: |
        # Use Azure mirrors
        sudo sed -i \
          -e 's|http://archive.ubuntu.com|http://azure.archive.ubuntu.com|g' \
          -e 's|http://security.ubuntu.com|http://azure.archive.ubuntu.com|g' \
          /etc/apt/sources.list

        # Enable universe repository
        sudo add-apt-repository -y universe
        sudo apt-get update

    # Install dependencies
    - name: Install system packages
      shell: bash
      run: |
        sudo apt-get install -y --no-install-recommends \
          build-essential clang-15 g++-12 gcc-arm-none-eabi \
          libavcodec-dev libavdevice-dev libavfilter-dev libavformat-dev libavutil-dev \
          libbz2-dev libcapnp-dev libcurl4-openssl-dev libeigen3-dev libffi-dev \
          libglfw3-dev libglew-dev liblzma-dev libncurses5-dev libssl-dev \
          libusb-1.0-0-dev libzmq3-dev libzstd-dev ocl-icd-opencl-dev \
          portaudio19-dev python3-dev python3-venv qtbase5-dev \
          libqt5charts5-dev libqt5svg5-dev libqt5serialbus5-dev

    # Python environment
    - uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Install Python dependencies
      shell: bash
      run: uv pip install -r requirements.txt --no-cache-dir
